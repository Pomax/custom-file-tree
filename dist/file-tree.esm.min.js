var a=n=>document.createElement(n);function m(n){return n.split("/").filter(e=>!!e).at(-1).includes(".")?!0:!!C(n).file}function C(n){let t={};return(n.substring(n.indexOf("?"))?.split("&")||[]).forEach(e=>{if(e.includes("=")){let[i,s]=e.split("=");t[i]=s}else t[e]=!0}),t}var c=window.customElements;function g(n){return new Promise((t,r)=>{let e=new FileReader;e.onloadend=({target:i})=>t(i.result),e.onerror=r,e.readAsArrayBuffer(n)})}var v=globalThis.HTMLElement??class{},h=class extends v{state={};eventControllers=[];constructor(t=""){super();let r=this.heading=a("entry-heading");this.appendChild(r),this.path=t}addExternalListener(t,r,e,i={}){let s=new AbortController;i.signal=s.signal,t.addEventListener(r,e,i),this.addAbortController(s)}addListener(t,r,e={}){this.addExternalListener(this,t,r,e)}addAbortController(t){this.eventControllers.push(t)}disconnectedCallback(){let{eventControllers:t}=this;for(;t.length;)t.shift().abort()}get removeEmpty(){return this.root.getAttribute("remove-empty")}get name(){return this.getAttribute("name")}set name(t){this.setAttribute("name",t)}get path(){return this.getAttribute("path")}set path(t){if(!t)return;let r=t.endsWith("/")?-2:-1;if(this.name=t.split("/").at(r).replace(/#.*/,""),!this.name&&t)throw Error(`why? path is ${t}`);let e=this.find("& > entry-heading");e.textContent=this.name,this.setAttribute("path",t)}updatePath(t,r){let e=new RegExp(`^${t}`);this.path=this.path.replace(e,r)}get dirPath(){let{path:t,name:r}=this;if(this.isFile)return t.replace(r,"");if(this.isDir)return t.substring(0,t.lastIndexOf(r));throw Error("entry is file nor dir.")}get root(){return this.closest("file-tree")}get parentDir(){let t=this;return t.tagName==="DIR-ENTRY"&&(t=t.parentNode),t.closest("dir-entry")}emit(t,r={},e=()=>{}){r.grant=()=>{e()},this.root.dispatchEvent(new CustomEvent(t,{detail:r}))}find(t){return this.querySelector(t)}findInTree(t){return this.root.querySelector(t)}findAll(t){return Array.from(this.querySelectorAll(t))}findAllInTree(t){return Array.from(this.root.querySelectorAll(t))}setState(t){Object.assign(this.state,t)}},y=class extends v{};c.define("entry-heading",y);function w({root:n,path:t}){let r=a("input");r.type="file",r.multiple=!0,confirm('To upload one or more files, press "OK". To upload an entire folder, press "Cancel".')||(r.webkitdirectory=!0),r.addEventListener("change",()=>{let{files:i}=r;i&&E(n,i,t)}),r.click()}async function E(n,t,r=""){async function e(i,s=""){if(i instanceof File){let o=await g(i),d=s+(i.webkitRelativePath||i.name);n.createEntry(r+d,o)}else if(i.isFile)i.file(async o=>{let d=await g(o),l=s+o.name;n.createEntry(r+l,d)});else if(i.isDirectory){let o=s+i.name+"/";i.createReader().readEntries(async d=>{for(let l of d)await e(l,o)})}}for await(let i of t)try{await e(i instanceof File?i:i.webkitGetAsEntry())}catch{return alert(`Unfortunately, a ${i.kind} is not a file or folder.`)}}function N(n){let t=new AbortController;n.draggable=!0;let r=()=>{n.findAllInTree(".drop-target").forEach(e=>e.classList.remove("drop-target"))};return n.addEventListener("dragstart",e=>{e.stopPropagation(),n.classList.add("dragging"),n.dataset.id=`${Date.now()}-${Math.random()}`,e.dataTransfer.setData("id",n.dataset.id)},{signal:t.signal}),n.addEventListener("dragenter",e=>{e.preventDefault(),r(),n.classList.add("drop-target")},{signal:t.signal}),n.addEventListener("dragover",e=>{let i=e.target;T(n,i)&&(e.preventDefault(),r(),n.classList.add("drop-target"))},{signal:t.signal}),n.addEventListener("dragleave",e=>{e.preventDefault(),r()},{signal:t.signal}),n.addEventListener("drop",async e=>{e.preventDefault(),e.stopPropagation(),r();let i=e.dataTransfer.getData("id");if(i)return x(n,i);await E(n.root,e.dataTransfer.items,n.path)},{signal:t.signal}),n.path==="."?n.draggable=!1:t}function T(n,t){return t===n?!0:t.closest("dir-entry")===n}function x(n,t){let r=n.findInTree(`[data-id="${t}"]`);if(delete r.dataset.id,r.classList.remove("dragging"),r===n)return;let e=r.path,i=n.path,s=(i!=="."?i:"")+r.name;r.isDir&&(s+="/"),n.root.moveEntry(r,e,s)}var u=class extends h{isDir=!0;constructor(t,r=t){super(t,r),this.addButtons()}connectedCallback(){this.clickListener=r=>{if(r.stopPropagation(),r.preventDefault(),this.path===".")return;let e=r.target.tagName;if(e!=="DIR-ENTRY"&&e!=="ENTRY-HEADING")return;let i=this.classList.contains("closed");this.root.selectEntry(this,{currentState:i?"closed":"open"})},this.addListener("click",this.clickListener);let t=N(this);t&&this.addAbortController(t)}addButtons(){this.addRenameButton(),this.addDeleteButton(),this.createFileButton(),this.createDirButton(),this.addUploadButton()}addRenameButton(){if(this.path===".")return;let t=a("button");t.title="Rename directory",t.textContent="\u270F\uFE0F",this.appendChild(t),t.addEventListener("click",()=>this.#t())}#t(){let t=prompt("Choose a new directory name",this.name)?.trim();if(t){if(t.includes("/"))return alert("If you want to relocate a dir, just move it.");this.root.renameEntry(this,t)}}addDeleteButton(){let t=a("button");t.title="Delete directory",t.textContent="\u{1F5D1}\uFE0F",this.appendChild(t),t.addEventListener("click",()=>this.#r())}#r(){confirm("Are you *sure* you want to delete this directory and everything in it?")&&this.root.removeEntry(this)}createFileButton(){let t=a("button");t.title="Add new file",t.textContent="\u{1F4C4}",t.addEventListener("click",()=>this.#e()),this.appendChild(t)}#e(){let t=prompt("Please specify a filename.")?.trim();if(t){if(t.includes("/"))return alert("Just add new files directly to the directory where they should live.");this.path!=="."&&(t=this.path+t),this.root.createEntry(t)}}createDirButton(){let t=a("button");t.title="Add new directory",t.textContent="\u{1F4C1}",t.addEventListener("click",()=>this.#i()),this.appendChild(t)}#i(){let t=prompt("Please specify a directory name.")?.trim();if(t){if(t.includes("/"))return alert("You'll have to create nested directories one at a time..");let r=(this.path!=="."?this.path:"")+t+"/";this.root.createEntry(r)}}addUploadButton(){let t=a("button");t.title="Upload files from your device",t.textContent="\u{1F4BB}",t.addEventListener("click",()=>w(this)),this.appendChild(t)}addEntry(t){this.appendChild(t),this.sort()}sort(t=!0,r=!0){let e=[...this.children];e.sort((i,s)=>{if(i.tagName==="ENTRY-HEADING")return-1;if(s.tagName==="ENTRY-HEADING")return 1;if(i.tagName==="BUTTON"&&s.tagName==="BUTTON")return 0;if(i.tagName==="BUTTON")return-1;if(s.tagName==="BUTTON")return 1;if(r){if(i.tagName==="DIR-ENTRY"&&s.tagName==="DIR-ENTRY")return i=i.path,s=s.path,i<s?-1:1;if(i.tagName==="DIR-ENTRY")return-1;if(s.tagName==="DIR-ENTRY")return 1}return i=i.path,s=s.path,i<s?-1:1}),e.forEach(i=>this.appendChild(i)),t&&this.findAll("& > dir-entry").forEach(i=>i.sort(t))}select(){this.classList.toggle("closed")}toJSON(){return JSON.stringify(this.toValue())}toString(){return this.toJSON()}toValue(){return this.root.toValue().filter(t=>t.startsWith(this.path))}};c.define("dir-entry",u);var f=class extends h{isFile=!0;constructor(t,r){super(t,r);let e=a("button");e.title="rename file",e.textContent="\u270F\uFE0F",this.appendChild(e),e.addEventListener("click",s=>{s.preventDefault(),s.stopPropagation();let o=prompt("New file name?",this.heading.textContent)?.trim();if(o){if(o.includes("/"))return alert("If you want to relocate a file, just move it.");this.root.renameEntry(this,o)}});let i=a("button");i.title="delete file",i.textContent="\u{1F5D1}\uFE0F",this.appendChild(i),i.addEventListener("click",s=>{s.preventDefault(),s.stopPropagation(),confirm("are you sure you want to delete this file?")&&this.root.removeEntry(this)}),this.addEventListener("click",s=>{s.preventDefault(),s.stopPropagation(),this.root.selectEntry(this)}),this.draggable=!0,this.addEventListener("dragstart",s=>{s.stopPropagation(),this.classList.add("dragging"),this.dataset.id=`${Date.now()}-${Math.random()}`,s.dataTransfer.setData("id",this.dataset.id)})}select(){this.root.find(".selected")?.classList.remove("selected"),this.classList.add("selected")}toJSON(){return JSON.stringify(this.toValue())}toString(){return this.path}toValue(){return[this.toString()]}};c.define("file-entry",f);var D=class extends h{isTree=!0;entries={};constructor(){super()}get root(){return this}get parentDir(){return this.rootDir}clear(){this.rootDir&&this.removeChild(this.rootDir);let t=this.rootDir=new u(".");this.appendChild(t)}connectedCallback(){this.addExternalListener(document,"dragend",()=>this.findAll(".dragging").forEach(t=>t.classList.remove("dragging")))}setFiles(t=[]){this.clear(),t.forEach(r=>this.#t(r,void 0,"tree:setfiles",!0))}createEntry(t,r=void 0){let e=(m(t)?"file":"dir")+":create";this.#t(t,r,e)}#t(t,r=void 0,e,i=!1){let{entries:s}=this;if(s[t])throw new Error(`${t} already exists.`);let o=()=>{let d=m(t)?f:u,l=new d(t);s[t]=l,this.#r(l).addEntry(l)};if(i)return o();this.emit(e,{path:t,content:r},o)}#r({dirPath:t}){let{entries:r}=this;if(!t)return this.rootDir;let e=this.find(`[path="${t}"`);return e||(e=this.rootDir,t.split("/").forEach(i=>{if(!i)return;let s=(e.path==="."?"":e.path)+i+"/",o=this.find(`[path="${s}"`);o||(o=new u(s),e.addEntry(o),r[s]=o),e=o}),e)}renameEntry(t,r){let e=t.path,i=e.lastIndexOf(t.name),s=e.substring(0,i)+r;t.isDir&&(s+="/");let o=(t.isFile?"file":"dir")+":rename";this.#e(t,e,s,o)}moveEntry(t,r,e){let i=(t.isFile?"file":"dir")+":move";this.#e(t,r,e,i)}#e(t,r,e,i){let{entries:s}=this;if(s[e])throw new Error(`${e} already exists.`);this.emit(i,{oldPath:r,newPath:e},()=>{Object.keys(s).forEach(l=>{if(l.startsWith(r)){let p=s[l];p.updatePath(r,e),s[p.path]=p,delete s[l]}});let{dirPath:o}=s[e]=t;(o?s[o]:this.rootDir).addEntry(t)})}removeEntry(t){let{entries:r}=this,{path:e}=t,i=(t.isFile?"file":"dir")+":delete";this.emit(i,{path:e},()=>{let{path:s}=t;Object.entries(r).forEach(([o,d])=>{o.startsWith(s)&&(d.remove(),delete r[o])})})}select(t){let r=this.entries[t];if(!r)throw new Error(`${t} does not exist.`);r.click()}selectEntry(t,r={}){let e=(t.isFile?"file":"dir")+":click";r.path=t.path,this.emit(e,{detail:r},()=>t.select())}sort(){this.rootDir.sort()}toJSON(){return JSON.stringify(Object.keys(this.entries).sort())}toString(){return this.toJSON()}toValue(){return this}};c.define("file-tree",D);
